-- --------------Практическое задание по теме «Операторы, фильтрация, сортировка и ограничение»-----------

-- 1. Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.


SELECT * FROM users u2 ;
 UPDATE users SET 
	created_at = NOW(),
	updated_at = NOW();



/*2. Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR и в 
них долгое время помещались значения в формате 20.10.2017 8:10. Необходимо преобразовать поля к типу DATETIME, 
сохранив введённые ранее значения.*/

UPDATE users SET
	created_at=STR_TO_DATE(created_at, '%d.%m.%Y %H:%i'), 
	updated_at=STR_TO_DATE(updated_at, '%d.%m.%Y %H:%i');

ALTER TABLE users MODIFY created_at DATETIME, MODIFY updated_at DATETIME;


/*3. В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0, если товар 
закончился и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, чтобы они 
выводились в порядке увеличения значения value. Однако нулевые запасы должны выводиться в конце, после всех записей.*/

select value FROM storehouses_products sp order by case when value=0 then 1 else 0 end, value; 

/*4. (по желанию) Из таблицы users необходимо извлечь пользователей, родившихся в августе и мае. Месяцы заданы в виде 
списка английских названий (may, august)*/


SELECT * FROM users WHERE DATE_FORMAT(birthday_at,'%M') in ('may', 'august');


/*5. (по желанию) Из таблицы catalogs извлекаются записи при помощи запроса. 
 SELECT * FROM catalogs WHERE id IN (5, 1, 2); Отсортируйте записи в порядке, заданном в списке IN.*/

SELECT * FROM catalogs WHERE id IN (5, 1, 2) ORDER BY FIELD(id, 5, 1, 2);




-- -----------------Практическое задание теме «Агрегация данных»----------------------------

-- 1. Подсчитайте средний возраст пользователей в таблице users.
-- посчитали возраст каждого

-- Решила создать столбец, куда буду вставлять возраст, чтобы потом по этому столбцу посчитать среднее значение
SELECT *FROM users u2 ;
ALTER TABLE users ADD COLUMN age INT;

INSERT INTO users (age) SELECT floor((to_days(now()) - to_days(birthday_at)) / 365.25) FROM users;

/*не понимаю почему, посчитаные значения вставляются не напротив имен и фамилий, а добавляются просто новые строки
в таблице users, где все поля пустые, кроме age, т.е. в таблице просто увеличивается число строк за счет вставленных
значений age*/

-- Среднее значение считала так:
SELECT AVG(age) FROM users;


/* 2. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. 
Следует учесть, что необходимы дни недели текущего года, а не года рождения.*/

-- не совсем поняла задание

-- 3. (по желанию) Подсчитайте произведение чисел в столбце таблицы.

SELECT EXP(sum(log(value))) from storehouses_products sp ;



